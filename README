Device-Cdio version 0.0.1

This is a interface to the GNU CD Input and Control library (libcdio)
which is written in C. The library encapsulates CD-ROM reading and
control. Perl programs wishing to be oblivious of the OS- and
device-dependent properties of a CD-ROM can use this library.

The encapsulation is done in two parts. The lower-level Perl
interface is called perlcdio and is generated by SWIG.

The more object-oriented module is Cdio and uses uses
perlcdio. Although perlcdio is perfectly usable on its own, it is
expected that Cdio is what most people will use. As perlcdio more
closely models the C interface, it is conceivable (if unlikely) that
diehard libcdio C users who are very familiar with that interface
could prefer that.

It is probably possible to change the SWIG in such a way to combine
these pieces. However there are the problems. First, I'm not that much
of a SWIG expert. Second it looks as though the resulting SWIG code
would be more complex. Third the separation makes translation very
straight forward to understand and maintain: first get what's in C
into Python as a one-to-one translation. Then we implement some nice
abstraction off of that. The abstraction can be modified without
having to redo the underlying translation. (But the reverse is
generally not true: usually changes to the C-to-python translation,
pycdio, do result in small, but obvious and straightforward changes to
the abstraction layer cdio.)

libcdio is rather large and yet may yet grow a bit. (UDF support may
be on the horizon.)  So what is here is incomplete; over time it may
grow to completion, depending on various factors: e.g. whether others
will help out (hint).

Some of the incompleteness is due to my lack of understanding of how
to get SWIG to accomplish wrapping various return values. If you know
how to do better, please let me know. Likewise suggestions on how to
improve classes or Python interaction are more than welcome.

Sections of libcdio that have been left out wholesale are the (SCSI)
MMC commands, the cdparanoia library, CD-Text handling and the entire
ISO-9660 library. Of the audio controls, I put in those things that
didn't require any thought. 

There is much to be done - you want to help out, please do so!

Standalone documentation via perlpod. ee also the
programs in the example directory.


INSTALLATION

To install this module, run the following commands:

    perl Makefile.PL
    make
    make test
    make install


Alternatively, to install with Module::Build, you can use the following commands:

    perl Build.PL
    ./Build
    ./Build test
    ./Build install



DEPENDENCIES

libcdio


COPYRIGHT AND LICENCE

Copyright (C) 2006, Rocky Bernstein

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
